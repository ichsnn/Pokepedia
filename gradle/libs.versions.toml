[versions]
androidx-junit = "1.1.5"
androidx-material = "1.5.1"
appcompat = "1.6.1"
coil = "2.4.0"
core-ktx = "1.10.1"
espresso-core = "3.5.1"
fragmentKtx = "1.6.1"
junit = "4.13.2"
constraintlayout = "2.1.4"
kotlinxCoroutines = "1.7.1"
lifecycle = "2.6.2"
material = "1.9.0"
androidGradlePlugin = "8.1.1"
kotlin = "1.9.0"
okhttp = "4.11.0"
retrofit = "2.9.0"
room = "2.5.2"
daggerHiltAndroid = "2.48"
ksp = "1.9.0-1.0.13"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
material = { module = "com.google.android.material:material", version.ref = "material" }
# coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
# room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
# hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "daggerHiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "daggerHiltAndroid" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
com-android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "daggerHiltAndroid" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }